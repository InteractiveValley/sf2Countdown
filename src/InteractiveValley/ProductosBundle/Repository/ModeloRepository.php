<?php

namespace InteractiveValley\ProductosBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ModeloRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ModeloRepository extends EntityRepository
{
    public function findNombreSluggable($slug, $excepto = 0){
        $query= $this->getEntityManager()->createQueryBuilder();
        if($excepto > 0){
            $query->select('p')
                ->from('InteractiveValley\ProductosBundle\Entity\Modelo', 'p')
                ->where('p.id<>:producto')
                ->setParameter('producto',$excepto)
                ->andWhere('p.slug LIKE :slug')
                ->setParameter('slug',$slug."%")
                ->orderBy('p.nombre', 'DESC'); 
        }else{
            $query->select('p')
                ->from('InteractiveValley\ProductosBundle\Entity\Modelo', 'p')
                ->andWhere('p.slug LIKE :slug')
                ->setParameter('slug',$slug."%")
                ->orderBy('p.nombre', 'DESC'); 
        }
        return $query->getQuery()->getResult();
    }
    
    public function queryFindByCategoria($categoria){
        $query= $this->getEntityManager()->createQueryBuilder();
        $query->select('m')
                ->from('InteractiveValley\ProductosBundle\Entity\Modelo', 'm')
                ->join('m.categorias', 'c')
                ->where('c.slug=:slug')
                ->setParameter('slug', $categoria->getSlug())
                ->orderBy('c.position', 'ASC');
        return $query->getQuery();
    }
    
    public function findByCategoria($categoria){
        $query= $this->queryFindByCategoria($categoria);
        return $query->getResult();
    }
}
